import telebot
import json
import time
import random

bot = telebot.TeleBot("8048575381:AAGwGWnkXmORreShYOROy4HpLC9qj4SKQUs")

LOG_CHAT_ID = -4775652491  # –¢–µ–∫ –ª–æ–≥—Ç–∞—Ä —Å–∞“õ—Ç–∞–ª–∞—Ç—ã–Ω —Ç–æ–ø—Ç—ã“£ ID

permissions_file = "permissions.json"
helpers_file = "helpers.json"
last_ask_file = "ask.json"

# –¢–µ–∫ —Ä“±“õ—Å–∞—Ç –µ—Ç—ñ–ª–≥–µ–Ω–¥–µ—Ä “ì–∞–Ω–∞ –∫–æ–º–∞–Ω–¥–∞–ª–∞—Ä–¥—ã “õ–æ–ª–¥–∞–Ω–∞ –∞–ª—Å—ã–Ω
def only_allowed(func):
    def wrapper(msg):
        username = f"@{msg.from_user.username}"
        perms = load_json(permissions_file)
        if username not in perms:
            return  # ‚ùå –ñ–∞—É–∞–ø –±–µ—Ä–º–µ–π–¥—ñ
        return func(msg)
    return wrapper

# JSON —Ñ—É–Ω–∫—Ü–∏—è–ª–∞—Ä
def load_json(path):
    try:
        with open(path, "r", encoding="utf-8") as f:
            return json.load(f)
    except:
        return {}

def save_json(path, data):
    with open(path, "w", encoding="utf-8") as f:
        json.dump(data, f, indent=2, ensure_ascii=False)
        # /givehelper
@bot.message_handler(commands=['givehelper'])
@only_allowed
def give_helper(msg):
    try:
        _, username, nick = msg.text.split()
        perms = load_json(permissions_file)
        helpers = load_json(helpers_file)

        perms[username] = {"role": "helper", "nick": nick}
        helpers[nick] = {
            "role": "–•–µ–ª–ø–µ—Ä",
            "vk": "",
            "days": 0,
            "warns": "0/2",
            "strikes": 0,
            "points": 0,
            "afk": 0,
            "asks": 0
        }

        save_json(permissions_file, perms)
        save_json(helpers_file, helpers)
        bot.reply_to(msg, f"‚úÖ {username} —Ç–µ–ø–µ—Ä—å helper —Å –Ω–∏–∫–æ–º {nick}")
    except:
        bot.reply_to(msg, "‚ùó –ü—Ä–∏–º–µ—Ä: /givehelper @user Nick_Name")
      
@bot.message_handler(commands=['getid'])
def get_id(msg):
    bot.reply_to(msg, f"üÜî Chat ID: `{msg.chat.id}`", parse_mode="Markdown")

# /giveadmin
@bot.message_handler(commands=['giveadmin'])
@only_allowed
def give_admin(msg):
    try:
        _, username, nick = msg.text.split()
        perms = load_json(permissions_file)
        helpers = load_json(helpers_file)

        perms[username] = {"role": "admin", "nick": nick}
        helpers[nick] = {
            "role": "–°—Ç–∞—Ä—à–∏–π –•–µ–ª–ø–µ—Ä",
            "vk": "",
            "days": 0,
            "warns": "0/2",
            "strikes": 0,
            "points": 0,
            "afk": 0,
            "asks": 0
        }

        save_json(permissions_file, perms)
        save_json(helpers_file, helpers)
        bot.reply_to(msg, f"‚úÖ {username} —Ç–µ–ø–µ—Ä—å admin —Å –Ω–∏–∫–æ–º {nick}")
    except:
        bot.reply_to(msg, "‚ùó –ü—Ä–∏–º–µ—Ä: /giveadmin @user Nick_Name")

# /remove
@bot.message_handler(commands=['remove'])
@only_allowed
def remove_person(msg):
    try:
        _, target = msg.text.split()
        perms = load_json(permissions_file)
        helpers = load_json(helpers_file)

        # –£–¥–∞–ª–µ–Ω–∏–µ –ø–æ username
        if target in perms:
            nick = perms[target]["nick"]
            perms.pop(target, None)
            helpers.pop(nick, None)
            text = f"‚ùå {target} —Å–Ω—è—Ç –∏ –µ–≥–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —É–¥–∞–ª–µ–Ω–∞"
        # –£–¥–∞–ª–µ–Ω–∏–µ –ø–æ –Ω–∏–∫—É
        elif target in helpers:
            for u in list(perms):
                if perms[u]["nick"] == target:
                    perms.pop(u, None)
            helpers.pop(target, None)
            text = f"‚ùå {target} —Å–Ω—è—Ç –∏ —É–¥–∞–ª—ë–Ω"
        else:
            text = "‚ùó –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω."

        save_json(permissions_file, perms)
        save_json(helpers_file, helpers)
        bot.reply_to(msg, text)

    except Exception as e:
        bot.reply_to(msg, f"‚ö† –û—à–∏–±–∫–∞: {e}")

# /form
@bot.message_handler(commands=['form'])
@only_allowed
def form_helper(msg):
    try:
        parts = msg.text.split()
        if len(parts) < 4:
            return bot.reply_to(msg, "‚ùó –ü—Ä–∏–º–µ—Ä: /form Nick_Name –†–æ–ª—å VK")

        nick = parts[1]
        vk = parts[-1]
        role = ' '.join(parts[2:-1])  # “ö–∞–ª“ì–∞–Ω –±”©–ª—ñ–∫—Ç–µ—Ä —Ä–æ–ª—å –±–æ–ª–∞–¥—ã

        helpers = load_json(helpers_file)
        helpers[nick] = {
            "role": role,
            "vk": vk,
            "days": 0,
            "warns": "0/2",
            "strikes": 0,
            "points": 0,
            "afk": 0,
            "asks": 0
        }
        save_json(helpers_file, helpers)
        bot.reply_to(msg, f"‚úÖ {nick} –¥–æ–±–∞–≤–ª–µ–Ω –≤ helperlist —Å —Ä–æ–ª—å—é: {role} –∏ VK: {vk}")
    except:
        bot.reply_to(msg, "‚ùó –ü—Ä–∏–º–µ—Ä: /form Nick_Name –†–æ–ª—å VK")
        # /edit
@bot.message_handler(commands=['edit'])
@only_allowed
def edit_stat(msg):
    try:
        args = msg.text.split(maxsplit=3)
        if len(args) != 4:
            return bot.reply_to(msg, "‚ùó –ü—Ä–∏–º–µ—Ä: /edit Nick_Name –ø–∞—Ä–∞–º–µ—Ç—Ä –∑–Ω–∞—á–µ–Ω–∏–µ")

        nick, param, value = args[1], args[2], args[3]
        username = f"@{msg.from_user.username}"
        perms = load_json(permissions_file)

        if username not in perms or perms[username]['role'] != 'admin':
            return bot.reply_to(msg, "üö´ –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω—ã –º–æ–≥—É—Ç –∏–∑–º–µ–Ω—è—Ç—å –¥–∞–Ω–Ω—ã–µ.")

        helpers = load_json(helpers_file)
        if nick not in helpers:
            return bot.reply_to(msg, f"‚ùå –•–µ–ª–ø–µ—Ä {nick} –Ω–µ –Ω–∞–π–¥–µ–Ω.")

        if param not in helpers[nick]:
            return bot.reply_to(msg, f"‚ùó –ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä.")

        if param in ['days', 'strikes', 'points', 'afk', 'asks']:
            value = int(value)

        helpers[nick][param] = value
        save_json(helpers_file, helpers)
        bot.reply_to(msg, f"‚úÖ –£ {nick} –ø–∞—Ä–∞–º–µ—Ç—Ä {param} –æ–±–Ω–æ–≤–ª—ë–Ω –Ω–∞ {value}")
    except Exception as e:
        bot.reply_to(msg, f"‚ö† –û—à–∏–±–∫–∞: {e}")

# /search
@bot.message_handler(commands=['search'])
@only_allowed
def search_info(msg):
    args = msg.text.split()
    username = f"@{msg.from_user.username}"
    perms = load_json(permissions_file)
    helpers = load_json(helpers_file)

    if username not in perms:
        return

    role = perms[username]['role']
    mynick = perms[username]['nick']
    nick = mynick if len(args) == 1 else args[1]

    if nick not in helpers:
        return bot.reply_to(msg, f"‚ùå Nick {nick} –Ω–µ –Ω–∞–π–¥–µ–Ω.")
    if len(args) > 1 and role != "admin":
        return bot.reply_to(msg, "‚ùå –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω—ã –º–æ–≥—É—Ç —Å–º–æ—Ç—Ä–µ—Ç—å —á—É–∂–∏–µ –¥–∞–Ω–Ω—ã–µ.")

    h = helpers[nick]
    text = (
        f"üë§ NickName: {nick}\n"
        f"üè¢ –î–æ–ª–∂–Ω–æ—Å—Ç—å: {h['role']}\n"
        f"üìÖ –î–Ω–µ–π –≤ –¥–æ–ª–∂–Ω–æ—Å—Ç–∏: {h['days']}\n"
        f"‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è: {h['warns']}\n"
        f"‚ùóÔ∏è –í—ã–≥–æ–≤–æ—Ä—ã: {h['strikes']}\n"
        f"‚≠êÔ∏è –ë–∞–ª–ª—ã: {h['points']}\n"
        f"üí§ –ù–µ–∞–∫—Ç–∏–≤—ã: {h['afk']}\n"
        f"‚ÅâÔ∏è –°–¥–µ–ª–∞–Ω–æ –∞—Å–∫–æ–≤: {h.get('asks', 0)}"
    )
    bot.reply_to(msg, text)

# /helperlist
@bot.message_handler(commands=['helperlist'])
@only_allowed
def helper_list(msg):
    helpers = load_json(helpers_file)
    if not helpers:
        return bot.reply_to(msg, "‚ùå –°–ø–∏—Å–æ–∫ –ø—É—Å—Ç.")

    def get_priority(data):
        first = data["role"].strip().upper()[0]
        return {
            "–ì": 0,
            "–ó": 1,
            "–°": 2,
            "–•": 3
        }.get(first, 4)

    sorted_helpers = sorted(helpers.items(), key=lambda x: get_priority(x[1]))

    text = "üìú <b>–°–ø–∏—Å–æ–∫ —Ö–µ–ª–ø–µ—Ä–æ–≤:</b>\n\n"
    for nick, data in sorted_helpers:
        role = data['role']
        vk = data['vk'].strip()

        # –ï—Å–ª–∏ —Å—Å—ã–ª–∫–∞ –ø—É—Å—Ç–∞—è ‚Äî —Å—Ç–∞–≤–∏–º –ø—Ä–æ—á–µ—Ä–∫
        if vk == "":
            link = "‚Äî"
        else:
            link = f'<a href="{vk}">VK</a>'

        text += f"üë§ <b>{nick}</b>\nüè¢ {role}\nüîó {link}\n\n"

    bot.send_message(msg.chat.id, text, parse_mode="HTML", disable_web_page_preview=True)

# /myaccess
@bot.message_handler(commands=['myaccess'])
@only_allowed
def my_access(msg):
    username = f"@{msg.from_user.username}"
    perms = load_json(permissions_file)
    if username in perms:
        bot.reply_to(msg, f"üîë –í–∞—à –¥–æ—Å—Ç—É–ø: {perms[username]['role']}")
    else:
        bot.reply_to(msg, "‚ùó –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞.")

import json
import random
import time
import difflib  # –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–æ–≤

last_ask_file = "ask.json"  # —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–ª—è —Ç–∞–π–º–µ—Ä–∞

# –ó–∞–≥—Ä—É–∂–∞–µ–º –≤–æ–ø—Ä–æ—Å—ã
with open("ask.json", "r", encoding="utf-8") as f:
    questions = json.load(f)

# –î–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ –æ—Ç–≤–µ—Ç–∞
def load_json(path):
    try:
        with open(path, "r", encoding="utf-8") as f:
            return json.load(f)
    except:
        return {}

def save_json(path, data):
    with open(path, "w", encoding="utf-8") as f:
        json.dump(data, f, indent=2, ensure_ascii=False)

# –ö–æ–º–∞–Ω–¥–∞ /ask
@bot.message_handler(commands=['ask'])
@only_allowed
def ask_question(msg):
    username = f"@{msg.from_user.username}"
    perms = load_json("permissions.json")

    if username not in perms:
        return bot.reply_to(msg, "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞.")

    last = load_json(last_ask_file)
    now = time.time()

    if username in last and now - last[username] < 3600:
        mins = int((3600 - (now - last[username])) // 60)
        return bot.reply_to(msg, f"‚è≥ –ü–æ–¥–æ–∂–¥–∏ –µ—â—ë {mins} –º–∏–Ω –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–∏–º –≤–æ–ø—Ä–æ—Å–æ–º.")

    q = random.choice(list(questions))
    correct = questions[q]
    last[username] = now
    save_json(last_ask_file, last)

    bot.send_message(msg.chat.id, f"{q}\n\nüí¨ –ù–∞–ø–∏—à–∏ –æ—Ç–≤–µ—Ç —Å—é–¥–∞:")

    # –û–∂–∏–¥–∞–µ–º –æ—Ç–≤–µ—Ç
    @bot.message_handler(func=lambda m: m.chat.id == msg.chat.id and m.from_user.username == msg.from_user.username)
    def check_answer(answer_msg):
        user_ans = answer_msg.text.lower().strip()
        correct_ans = correct.lower().strip()

        similarity = difflib.SequenceMatcher(None, user_ans, correct_ans).ratio()

        if similarity >= 0.6:
            bot.reply_to(answer_msg, "‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ!")
        else:
            bot.reply_to(answer_msg, f"‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ.\n–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: {correct}")
            # /start, /help, /scores
@bot.message_handler(commands=['start', 'help', 'scores'])
@only_allowed
def base_cmds(msg):
    username = f"@{msg.from_user.username}"
    perms = load_json(permissions_file)
    role = perms[username]['role'] if username in perms else None

    if msg.text == '/start':
        return bot.reply_to(msg, "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –ø–æ–º–æ—â–Ω–∏–∫ –ø—Ä–æ–µ–∫—Ç–∞ Black Russia.")

    if msg.text == '/help':
        if role == 'admin':
            help_text = (
                "üõ† –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –∞–¥–º–∏–Ω–æ–≤:\n"
                "/givehelper @username Nick_Name ‚Äî –¥–∞—Ç—å –¥–æ—Å—Ç—É–ø —Ö–µ–ª–ø–µ—Ä–∞\n"
                "/giveadmin @username Nick_Name ‚Äî –¥–∞—Ç—å –¥–æ—Å—Ç—É–ø –∞–¥–º–∏–Ω–∞\n"
                "/remove @username –∏–ª–∏ Nick_Name ‚Äî —É–¥–∞–ª–∏—Ç—å –¥–æ—Å—Ç—É–ø –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É\n"
                "/form Nick_Name –†–æ–ª—å VK ‚Äî –¥–æ–±–∞–≤–∏—Ç—å –≤ helperlist\n"
                "/edit Nick_Name –ø–∞—Ä–∞–º–µ—Ç—Ä –∑–Ω–∞—á–µ–Ω–∏–µ ‚Äî –∏–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É\n"
                "/search Nick_Name ‚Äî –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —á—É–∂—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É\n"
                "/helperlist ‚Äî —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ö–µ–ª–ø–µ—Ä–æ–≤\n"
                "/ask ‚Äî –∑–∞–¥–∞—Ç—å —Å–ª—É—á–∞–π–Ω—ã–π –≤–æ–ø—Ä–æ—Å —Ö–µ–ª–ø–µ—Ä—É\n"
                "/myaccess ‚Äî —É–∑–Ω–∞—Ç—å —Å–≤–æ–π –¥–æ—Å—Ç—É–ø\n"
                "/scores ‚Äî —Å—á—ë—Ç (–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)"
            )
        elif role == 'helper':
            help_text = (
                "üõ† –ö–æ–º–∞–Ω–¥—ã –¥–ª—è —Ö–µ–ª–ø–µ—Ä–æ–≤:\n"
                "/search ‚Äî –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É\n"
                "/ask ‚Äî –ø–æ–ª—É—á–∏—Ç—å –≤–æ–ø—Ä–æ—Å\n"
                "/helperlist ‚Äî —Å–ø–∏—Å–æ–∫ —Ö–µ–ª–ø–µ—Ä–æ–≤\n"
                "/myaccess ‚Äî —É–∑–Ω–∞—Ç—å —Å–≤–æ–π –¥–æ—Å—Ç—É–ø"
            )
        else:
            help_text = "‚ùó –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –∫–æ–º–∞–Ω–¥."

        bot.reply_to(msg, help_text)

    elif msg.text == '/scores':
        bot.reply_to(msg, "üèÜ –ü–æ–¥—Å—á—ë—Ç –±–∞–ª–ª–æ–≤ –ø–æ–∫–∞ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.")

# üîÅ –ü–µ—Ä–µ—Å—ã–ª–∫–∞ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –∞–¥–º–∏–Ω—É
import re  # —Ä–µ–≥—É–ª—è—Ä–∫–∞ –∫–∏—Ä–∏–ª–ª–∏—Ü–∞ “Ø—à—ñ–Ω

ADMIN_ID = 6197668362  # –°–µ–Ω—ñ“£ Telegram ID

@bot.message_handler(func=lambda msg: True, content_types=['text'])
def monitor_all(msg):
    username = f"@{msg.from_user.username}"
    perms = load_json(permissions_file)
    text = msg.text.strip()

    # –¢–æ–ª—å–∫–æ –ª–∏—á–∫–∞
    if msg.chat.type != "private":
        return

    # –†–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    role = perms[username]["role"] if username in perms else None

    # 1. –°–æ–æ–±—â–µ–Ω–∏—è –±–µ–∑ –ø—Ä–∞–≤ (–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏)
    if username not in perms:
        if re.search(r'[–ê-–Ø–∞-—è–Å—ë]', text):  # –µ—Å–ª–∏ –∫–∏—Ä–∏–ª–ª–∏—Ü–∞
            bot.send_message(ADMIN_ID, f"üë§ –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π: {username}\n‚úâÔ∏è –ù–∞–ø–∏—Å–∞–ª (–∫–∏—Ä–∏–ª–ª–∏—Ü–∞):\n{text}")
        elif not text.startswith("/"):
            bot.send_message(ADMIN_ID, f"üë§ –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π: {username}\n‚úâÔ∏è –ù–∞–ø–∏—Å–∞–ª:\n{text}")
        return

    # 2. –•–µ–ª–ø–µ—Ä/–∞–¥–º–∏–Ω ‚Äî –ø–∏—à–µ—Ç –Ω–µ–∫–æ–º–∞–Ω–¥—É
    if not text.startswith("/"):
        bot.send_message(ADMIN_ID, f"üë§ {role.upper()} {username}\n‚úâÔ∏è –ù–∞–ø–∏—Å–∞–ª:\n{text}")
        return

    # 3. –ü–∏—à–µ—Ç –∫–æ–º–∞–Ω–¥—É, –∫–æ—Ç–æ—Ä–∞—è –µ–º—É –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∞
    if text.startswith("/giveadmin") or text.startswith("/edit") or text.startswith("/remove"):
        if role != "admin":
            bot.send_message(ADMIN_ID, f"üö´ –ö–æ–º–∞–Ω–¥–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞!\nüë§ {username} –ø—ã—Ç–∞–ª—Å—è: {text}")
            return

    # 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ä—É—Å—Å–∫–∏–µ —Å–ª–æ–≤–∞
    if re.search(r'[–ê-–Ø–∞-—è–Å—ë]', text):
        bot.send_message(ADMIN_ID, f"üá∑üá∫ –†—É—Å—Å–∫–∏–π —Ç–µ–∫—Å—Ç –æ—Ç {username}:\n{text}")
        

# /addask –∫–æ–º–∞–Ω–¥–∞—Å—ã
@bot.message_handler(commands=['addask'])
@only_allowed
def add_ask(msg):
    username = f"@{msg.from_user.username}"
    perms = load_json("permissions.json")

    # –¢–µ–∫ –∞–¥–º–∏–Ω “ì–∞–Ω–∞ “õ–æ—Å–∞ –∞–ª–∞–¥—ã
    if username not in perms or perms[username]["role"] != "admin":
        return bot.reply_to(msg, "‚ùå –¢–µ–∫ –∞–¥–º–∏–Ω–¥–µ—Ä–≥–µ “ì–∞–Ω–∞ —Ä“±“õ—Å–∞—Ç.")

    if "::" not in msg.text:
        return bot.reply_to(msg, "‚ùó –§–æ—Ä–º–∞—Ç: /addask –í–æ–ø—Ä–æ—Å :: –û—Ç–≤–µ—Ç")

    try:
        parts = msg.text.replace("/addask", "", 1).strip().split("::")
        question = parts[0].strip()
        answer = parts[1].strip()

        questions = load_json("ask.json")
        questions[question] = answer
        save_json("ask.json", questions)

        bot.reply_to(msg, "‚úÖ –°“±—Ä–∞“õ —Å”ô—Ç—Ç—ñ “õ–æ—Å—ã–ª–¥—ã!")
    except Exception as e:
        bot.reply_to(msg, f"‚ö†Ô∏è “ö–∞—Ç–µ: {e}")
       
@bot.message_handler(func=lambda msg: True, content_types=['text'])
def monitor_all(msg):
    if msg.chat.type != "private":
        return

    username = f"@{msg.from_user.username}"
    text = msg.text.strip()
    perms = load_json(permissions_file)
    role = perms[username]["role"] if username in perms else "‚ùå NO ACCESS"

    # 1. –ï–≥–µ—Ä –±“±–ª –±–µ–ª–≥—ñ–ª—ñ –∫–æ–º–∞–Ω–¥–∞ –±–æ–ª—Å–∞ ‚Äî –±–∞—Å“õ–∞ —Ö–µ–Ω–¥–ª–µ—Ä ”©“£–¥–µ–π–¥—ñ
    if text.startswith("/") and any(text.startswith(cmd) for cmd in KNOWN_COMMANDS):
        return

    # 2. –ï–≥–µ—Ä —Ä“±“õ—Å–∞—Ç—Å—ã–∑ –∞–¥–∞–º –±–æ–ª—Å–∞
    if username not in perms:
        if re.search(r'[–ê-–Ø–∞-—è–Å—ë]', text):  # –ö–∏—Ä–∏–ª–ª–∏—Ü–∞ –±–∞—Ä –º–∞
            bot.send_message(LOG_CHAT_ID, f"üë§ –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π: {username}\n‚úâÔ∏è –ù–∞–ø–∏—Å–∞–ª (–∫–∏—Ä–∏–ª–ª–∏—Ü–∞):\n{text}")
        elif not text.startswith("/"):
            bot.send_message(LOG_CHAT_ID, f"üë§ –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π: {username}\n‚úâÔ∏è –ù–∞–ø–∏—Å–∞–ª:\n{text}")
        return

    # 3. –ï–≥–µ—Ä –±“±–ª —Ä“±“õ—Å–∞—Ç—Ç—ã –∞–¥–∞–º –∂–∞–∑—Å–∞, –∂”ô–Ω–µ –Ω–µ–∫–æ–º–∞–Ω–¥–∞ –±–æ–ª—Å–∞ ‚Äî –ª–æ–≥“õ–∞
    if not text.startswith("/"):
        bot.send_message(LOG_CHAT_ID, f"üì© {role} {username}\n{text}")
    else:
        # –ë–µ–ª–≥—ñ—Å—ñ–∑ –∫–æ–º–∞–Ω–¥–∞ –±–æ–ª—Å–∞, –ª–æ–≥“õ–∞
        bot.send_message(LOG_CHAT_ID, f"‚öôÔ∏è {role} {username} –∂–∞–∑–¥—ã –∫–æ–º–∞–Ω–¥—É:\n{text}")

    # 4. –ï–≥–µ—Ä —Ç—ã–π—ã–º —Å–∞–ª—ã–Ω“ì–∞–Ω –∫–æ–º–∞–Ω–¥–∞–Ω—ã “õ–æ–ª–¥–∞–Ω—Å–∞ ‚Äî –∂–µ–∫–µ –∞–¥–º–∏–Ω–≥–µ
    if text.startswith("/giveadmin") or text.startswith("/edit") or text.startswith("/remove"):
        if role != "admin":
            bot.send_message(ADMIN_ID, f"üö´ –ö–æ–º–∞–Ω–¥–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞!\nüë§ {username} –ø—ã—Ç–∞–ª—Å—è: {text}")
            
@bot.message_handler(commands=['helperlist'])
@only_allowed
def show_helperlist(msg):
    helpers = load_json(helpers_file)
    
    hierarchy = {
        "–ì–ª–∞–≤–Ω—ã–π –°–ª–µ–¥—è—â–∏–π –∑–∞ –ê–≥–µ–Ω—Ç–∞–º–∏ –ü–æ–¥–¥–µ—Ä–∂–∫–∏": "üëë –†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ",
        "–ó–∞–º–µ—Å—Ç–∏—Ç–µ–ª—å –ì–ª–∞–≤–Ω–æ–≥–æ –°–ª–µ–¥—è—â–µ–≥–æ –∑–∞ –ê–≥–µ–Ω—Ç–∞–º–∏ –ü–æ–¥–¥–µ—Ä–∂–∫–∏": "üíé –ó–∞–º–µ—Å—Ç–∏—Ç–µ–ª–∏",
        "–°–ª–µ–¥—è—â–∏–π –∑–∞ –•–µ–ª–ø–µ—Ä–∞–º–∏": "üõ°Ô∏è –ö—É—Ä–∞—Ç–æ—Ä—ã",
        "–•–µ–ª–ø–µ—Ä": "üë§ –•–µ–ª–ø–µ—Ä—ã"
    }

    sections = {
        "üëë –†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ": [],
        "üíé –ó–∞–º–µ—Å—Ç–∏—Ç–µ–ª–∏": [],
        "üõ°Ô∏è –ö—É—Ä–∞—Ç–æ—Ä—ã": [],
        "üë§ –•–µ–ª–ø–µ—Ä—ã": []
    }

    for username, data in helpers.items():
        role = data.get("role", "–•–µ–ª–ø–µ—Ä")
        vk = data.get("vk", "‚Äî")
        added = False

        for key, section in hierarchy.items():
            if key.lower() in role.lower():
                sections[section].append(f"{hierarchy[key].split()[0]} {username} | {role} | [VK]({vk})")
                added = True
                break
        
        if not added:
            sections["üë§ –•–µ–ª–ø–µ—Ä—ã"].append(f"üë§ {username} | {role} | [VK]({vk})")

    response = ""
    total = 0
    for section_title, people in sections.items():
        if people:
            response += f"\n<b>{section_title}</b>\n"
            for i, person in enumerate(people, start=1):
                response += f"{i}. {person}\n"
                total += 1

    response += f"\nüìä <b>–í—Å–µ–≥–æ:</b> {total} —á–µ–ª–æ–≤–µ–∫"

    bot.send_message(msg.chat.id, response.strip(), parse_mode="HTML", disable_web_page_preview=True)
        
        # –ó–∞–ø—É—Å–∫
print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
bot.infinity_polling()
